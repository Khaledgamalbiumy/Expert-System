import tensorflow as tf
mnist = tf.keras.datasets.mnist
(x_train, y_train),(x_test, y_test) = mnist.load_data()


print('X Train Shape is : ' , x_train.shape)
print('X Train  is : ' , x_train[5])
print('---------------------------------------- ')
print('X Test Shape is : ' , x_test.shape)
print('X Test  is : ' , x_test[5])
print('---------------------------------------- ')
print('y Train Shape is : ' , y_train.shape)
print('y Train is : ' , y_train[5])
print('---------------------------------------- ')
print('y Test Shape is : ' , y_test.shape)
print('y Test  is : ' , y_test[5])
model = tf.keras.models.Sequential()
model.add(tf.keras.layers.Flatten())
model.add(tf.keras.layers.Dense(128, activation=tf.nn.relu))
model.add(tf.keras.layers.Dropout(0.2))
model.add(tf.keras.layers.Dense(10, activation=tf.nn.softmax))
model.compile(optimizer='adam', loss='sparse_categorical_crossentropy', metrics=['accuracy'])
model.fit(x_train, y_train, epochs=3)
model.predict(x_test)
val_loss, val_acc = model.evaluate(x_test, y_test)
print(val_loss)
print(val_acc)
